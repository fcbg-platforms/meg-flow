[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools >= 64.0.0']

[project]
authors = [
  {email = 'mathieu.scheltienne@gmail.com', name = 'Mathieu Scheltienne'},
]
classifiers = [
  'License :: OSI Approved :: MIT License',
  'Natural Language :: English',
  'Operating System :: MacOS',
  'Operating System :: Microsoft :: Windows',
  'Operating System :: Unix',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
  'Programming Language :: Python :: 3.9',
]
dependencies = [
  'byte_triggers',
  'click',
  'numpy>=1.21,<3',
  'packaging',
  'Phidget22',
  'psutil',
  'psychopy',
  'psychtoolbox',
  'pynput',
  'pyzmq',
]
description = 'Flow study within the MEG.'
keywords = [
  'flow',
  'meg',
  'python',
]
license = {file = 'LICENSE'}
maintainers = [
  {email = 'mathieu.scheltienne@gmail.com', name = 'Mathieu Scheltienne'},
]
name = 'flow'
readme = 'README.md'
requires-python = '>=3.9'
version = '0.2.0.dev0'

[project.optional-dependencies]
all = [
  'flow[build]',
  'flow[style]',
  'flow[test]',
]
build = [
  'build',
  'twine',
]
full = [
  'flow[all]',
]
style = [
  'bibclean',
  'codespell[toml]>=2.2.4',
  'pre-commit',
  'ruff>=0.6.0',
  'toml-sort',
  'yamllint',
]
test = [
  'pytest-cov',
  'pytest-timeout',
  'pytest>=8.0',
]

[project.scripts]
flow = 'flow.commands.main:run'

[project.urls]
documentation = 'https://github.com/fcbg-platforms/meg-flow'
homepage = 'https://github.com/fcbg-platforms/meg-flow'
source = 'https://github.com/fcbg-platforms/meg-flow'
tracker = 'https://github.com/fcbg-platforms/meg-flow/issues'

[tool.codespell]
check-filenames = true
check-hidden = true
ignore-words = '.codespellignore'
skip = 'build,.git,.mypy_cache,.pytest_cache,.venv'

[tool.coverage.report]
exclude_lines = [
  'if __name__ == .__main__.:',
  'if TYPE_CHECKING:',
  'pragma: no cover',
]
precision = 2

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
  '**/__init__.py',
  '**/conftest.py',
  '**/flow/_version.py',
  '**/flow/utils/_fixes.py',
  '**/tests/**',
]

[tool.pytest.ini_options]
addopts = ['--color=yes', '--cov-report=', '--durations=20', '--junit-xml=junit-results.xml', '--strict-config', '--tb=short', '-ra', '-v']
junit_family = 'xunit2'
minversion = '8.0'

[tool.ruff]
extend-exclude = []
line-length = 88

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"

[tool.ruff.lint]
ignore = []
select = ['A', 'B', 'D', 'E', 'F', 'G', 'I', 'LOG', 'NPY', 'PIE', 'PT', 'T20', 'UP', 'W']

[tool.ruff.lint.per-file-ignores]
'*' = [
  'B904',  # 'Within an except clause, raise exceptions with raise ... from ...'
  'D100',  # 'Missing docstring in public module'
  'D104',  # 'Missing docstring in public package'
  'D107',  # 'Missing docstring in __init__'
  'UP007',  # 'Use `X | Y` for type annotations', requires python 3.10
  'UP038',  # 'Use X | Y in {} call instead of (X, Y)', requires python 3.10
]
'*.pyi' = ['E501']
'__init__.py' = ['F401']
'script/*' = ['T201']
'tutorials/*' = ['D205', 'D400', 'T201']

[tool.ruff.lint.pydocstyle]
convention = 'numpy'
ignore-decorators = ["flow.utils._docs.copy_doc"]

[tool.setuptools]
include-package-data = false

[tool.setuptools.package-data]
'flow.oddball.sounds' = ['*.wav']
'flow.oddball.trialList' = ['*.txt']

[tool.setuptools.packages.find]
exclude = ['flow*tests']
include = ['flow*']

[tool.tomlsort]
all = true
ignore_case = true
spaces_before_inline_comment = 2
trailing_comma_inline_array = true
